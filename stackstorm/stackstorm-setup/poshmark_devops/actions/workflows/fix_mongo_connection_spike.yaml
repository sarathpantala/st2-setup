version: '2.0'

poshmark_devops.fix_mongo_connection_spike:
  description: Restart prod for app and qw to resolve mongodb connection spike.
  input:
    - color
    - schedule
    - env
  tasks:
    check_previous_run:
      action: st2.kv.grep
      input:
        query: "fixedmongo_{{ _.env }}"
      on-success:
        - msg_slack: "{{ _.schedule == 'false' or _.env != 'prod' }}"
        - schedule_restart: "{{ _.schedule == 'true' and _.env == 'prod' }}"
        - skip_work: "{{ task('check_previous_run').result.result is defined and task('check_previous_run').result.result and _.env == 'prod' }}"

    schedule_restart:
      action: st2.kv.set
      input:
        value: "{'class':'all', 'force_all': False, 'leave_off_lb': False, 'ut': False, 'apiapp': True, 'etapp': True, 'mappapp': True, 'upapp': True, 'webapp': False, 'batch': False, 'cobatch':        False, 'skb': False, 'skw': False, 'eb': False, 'pb': False, 'nt': False, 'act': False, 'bg': False, 'btn': False, 'bundle': False, 'co': False, 'cup': False, 'ff', False, 'ip': False, 'is': False,          'nrt': False, 'oi': False, 'pi': False, 'ps': False, 'smr': False, 'sp': False, 'ui': False,
        'vault': False}"
        key: 'schedulerestart'
      on-success:
        - notify_scheduled

    notify_scheduled:
      action: chatops.post_message
      input:
        channel: "poshbot_channel"
        message: "Restart scheduled for after current party"
        extra:
          color: "warning"

    msg_slack:
      action: chatops.post_message
      input:
        channel: "poshbot_channel"
        message: "Restarting {{ _.env }} APP & Queue Workers to address MongoDB connection spike"
        extra:
          color: "{{ _.color }}"
      on-success:
        - run_jenkins_restart: "{{ _.env == 'prod' }}"
        - nonprod_jenkins_restart: "{{ _.env != 'prod' }}"

    nonprod_jenkins_restart:
      action: poshmark_devops.run_jenkins_job job='restart' buildenv='#{buildenv}'
      input:
        job: "restart"
        buildenv: "{{ _.env }}"
      on-success:
        log_restart

    run_jenkins_restart:
      action: jenkins.build_job
      input:
        project: "prod-restart-no-defaults"
        parameters: "{'class':'all', 'force_all': False, 'leave_off_lb': False, 'ut': False, 'apiapp': True, 'etapp': True, 'mappapp': True, 'upapp': True, 'webapp': False, 'batch': False, 'cobatch': False, 'skb': False, 'skw': False, 'eb': False, 'pb': False, 'nt': False, 'act': False, 'bg': False, 'btn': False, 'bundle': False, 'co': False, 'cup': False, 'ff', False, 'ip': False, 'is': False, 'nrt': False, 'oi': False, 'pi': False, 'ps': False, 'smr': False, 'sp': False, 'ui': False, 'vault': False}"
      on-success:
        log_restart

    log_restart:
      action: st2.kv.set
      input:
        value: 'true'
        key: "fixedmongo_{{ _.env }}"
        ttl: 3600
      on-success:
        - notify_1919

    notify_1919:
      action: chatops.post_message
      input:
        channel: "1919"
        message: "Restarted {{ _.env }} App & Queue Workers to address MongoDB connection spike"
        extra:
          color: "{{ _.color }}"

    skip_work:
      action: pagerduty.launch_incident
      input:
        description: "Received 2+ MongoDB Connection Spikes in the past 60 mins."
